"
GtkTreeViewColumn
GtkTreeViewColumn â€” A visible column in a GtkTreeView widget

https://developer.gnome.org/gtk3/stable/GtkTreeViewColumn.html
"
Class {
	#name : #GtkTreeViewColumn,
	#superclass : #GObject,
	#traits : 'GtkTLibrary',
	#classTraits : 'GtkTLibrary classTrait',
	#instVars : [
		'renderers'
	],
	#pools : [
		'GtkSortType',
		'GtkTreeViewColumnSizing'
	],
	#category : #'Gtk-Widget-Tree'
}

{ #category : #accessing }
GtkTreeViewColumn class >> gType [ 
	"This method was automatically generated"

	^ self ffiCall: #(gsize gtk_tree_view_column_get_type())
]

{ #category : #'instance creation' }
GtkTreeViewColumn class >> new [

	^ self treeViewColumnNew initialize
]

{ #category : #private }
GtkTreeViewColumn class >> treeViewColumnNew [

	^ self ffiCall: #(GtkTreeViewColumn *gtk_tree_view_column_new (void))
]

{ #category : #accessing }
GtkTreeViewColumn >> addAttribute: attribute column: column renderer: aRenderer [

	self ffiCall: #(void gtk_tree_view_column_add_attribute (
		self,
		GtkCellRendererText *aRenderer,
		const gchar *attribute,
		gint column))
]

{ #category : #initialization }
GtkTreeViewColumn >> addedToTreeView: aTreeView [

	renderers do: [ :each |
		each 
			addedToTreeView: aTreeView
			column: self ]
]

{ #category : #initialization }
GtkTreeViewColumn >> autoObjectUnref [

	"do not unref"
]

{ #category : #accessing }
GtkTreeViewColumn >> beClickable [

	self clickable: true
]

{ #category : #accessing }
GtkTreeViewColumn >> beExpand [

	self expand: true
]

{ #category : #accessing }
GtkTreeViewColumn >> beNotClickable [

	self clickable: false
]

{ #category : #accessing }
GtkTreeViewColumn >> beNotExpand [

	self expand: false
]

{ #category : #accessing }
GtkTreeViewColumn >> beResizable [

	self resizable: true
]

{ #category : #accessing }
GtkTreeViewColumn >> beSizingAutosize [

	self sizing: GTK_TREE_VIEW_COLUMN_AUTOSIZE
]

{ #category : #accessing }
GtkTreeViewColumn >> beSizingFixed [

	self sizing: GTK_TREE_VIEW_COLUMN_FIXED
]

{ #category : #accessing }
GtkTreeViewColumn >> beSizingGrowOnly [

	self sizing: GTK_TREE_VIEW_COLUMN_GROW_ONLY
]

{ #category : #accessing }
GtkTreeViewColumn >> beSortAscending [

	self sortOrder: GTK_SORT_ASCENDING
]

{ #category : #accessing }
GtkTreeViewColumn >> beSortDescending [

	self sortOrder: GTK_SORT_DESCENDING
]

{ #category : #private }
GtkTreeViewColumn >> clickable: clickable [

	self ffiCall: #(void gtk_tree_view_column_set_clickable (self, gboolean clickable))
]

{ #category : #signaling }
GtkTreeViewColumn >> connectClicked: aBlock [

	(GClickedCallback do: aBlock) connectTo: self
]

{ #category : #private }
GtkTreeViewColumn >> expand: expand [

	self ffiCall: #(void gtk_tree_view_column_set_expand (self, gboolean expand))
]

{ #category : #accessing }
GtkTreeViewColumn >> fixedWidth: fixed_width [

	self ffiCall: #(void gtk_tree_view_column_set_fixed_width (self, gint fixed_width)) 
]

{ #category : #private }
GtkTreeViewColumn >> gtkTreeViewColumnGetTitle [

	^ self ffiCall: #(String gtk_tree_view_column_get_title (self))
]

{ #category : #private }
GtkTreeViewColumn >> gtkTreeViewColumnPackEnd: cell expand: expand [

	self ffiCall: #(void gtk_tree_view_column_pack_end (
		self,
		GtkCellRendererText *cell,
		gboolean aBoolean))
]

{ #category : #private }
GtkTreeViewColumn >> gtkTreeViewColumnPackStart: cell expand: expand [

	self ffiCall: #(void gtk_tree_view_column_pack_start (
		self,
		GtkCellRendererText *cell,
		gboolean expand))
]

{ #category : #private }
GtkTreeViewColumn >> gtkTreeViewColumnSetTitle: string [

	self ffiCall: #(void gtk_tree_view_column_set_title (self, String string))
]

{ #category : #accessing }
GtkTreeViewColumn >> hideSortIndicator [

	self sortIndicator: false
]

{ #category : #accessing }
GtkTreeViewColumn >> id [
	^ self title
]

{ #category : #initialization }
GtkTreeViewColumn >> initialize [

	super initialize.
	self beSizingFixed.
	renderers := #()
]

{ #category : #testing }
GtkTreeViewColumn >> isClickable [

	^ self ffiCall: #(gboolean gtk_tree_view_column_get_clickable (self))
]

{ #category : #testing }
GtkTreeViewColumn >> isEditable [
	
	^ renderers anySatisfy: #isEditable 
]

{ #category : #testing }
GtkTreeViewColumn >> isResizable [ 

	^ self ffiCall: #(gboolean gtk_tree_view_column_get_resizable (self))
]

{ #category : #testing }
GtkTreeViewColumn >> isSortIndicatorVisible [

	^ self ffiCall: #(gboolean gtk_tree_view_column_get_sort_indicator (self))
]

{ #category : #accessing }
GtkTreeViewColumn >> maxWidth [

	^ self ffiCall: #(gint gtk_tree_view_column_get_max_width (self))
]

{ #category : #accessing }
GtkTreeViewColumn >> maxWidth: max_width [

	^ self ffiCall: #(void gtk_tree_view_column_set_max_width (self, gint max_width))
]

{ #category : #accessing }
GtkTreeViewColumn >> minWidth [

	^ self ffiCall: #(gint gtk_tree_view_column_get_min_width (self) )
]

{ #category : #accessing }
GtkTreeViewColumn >> minWidth: min_width [

	^ self ffiCall: #(void gtk_tree_view_column_set_min_width (self, gint min_width) )
]

{ #category : #accessing }
GtkTreeViewColumn >> packEnd: aRenderer [

	self packEnd: aRenderer expand: true
]

{ #category : #accessing }
GtkTreeViewColumn >> packEnd: aRenderer expand: aBoolean [

	renderers := renderers copyWith: aRenderer.
	self 
		gtkTreeViewColumnPackEnd: aRenderer 
		expand: aBoolean
]

{ #category : #accessing }
GtkTreeViewColumn >> packStart: aRenderer [

	self packStart: aRenderer expand: true 
		
]

{ #category : #accessing }
GtkTreeViewColumn >> packStart: aRenderer expand: aBoolean [

	renderers := renderers copyWith: aRenderer.
	self 
		gtkTreeViewColumnPackStart: aRenderer 
		expand: aBoolean
]

{ #category : #private }
GtkTreeViewColumn >> resizable: resizable [

	^ self ffiCall: #(void gtk_tree_view_column_set_resizable (self, gboolean resizable))
]

{ #category : #accessing }
GtkTreeViewColumn >> showSortIndicator [

	self sortIndicator: true
]

{ #category : #accessing }
GtkTreeViewColumn >> sizing [

	^ self ffiCall: #(GtkTreeViewColumnSizing gtk_tree_view_column_get_sizing (self))
]

{ #category : #private }
GtkTreeViewColumn >> sizing: type [
	
	self ffiCall: #(void gtk_tree_view_column_set_sizing (self, GtkTreeViewColumnSizing type))
]

{ #category : #accessing }
GtkTreeViewColumn >> sortColumnId [
	
	^ self ffiCall: #(gint gtk_tree_view_column_get_sort_column_id(self))
]

{ #category : #accessing }
GtkTreeViewColumn >> sortColumnId: sort_column_id [
	
	self ffiCall: #(void gtk_tree_view_column_set_sort_column_id (self, gint sort_column_id))
]

{ #category : #private }
GtkTreeViewColumn >> sortIndicator: setting [

	self ffiCall: #(void gtk_tree_view_column_set_sort_indicator (self, gboolean setting))
]

{ #category : #accessing }
GtkTreeViewColumn >> sortOrder [

	^ self ffiCall: #(GtkSortType gtk_tree_view_column_get_sort_order (self))
]

{ #category : #accessing }
GtkTreeViewColumn >> sortOrder: order [

	self ffiCall: #(void gtk_tree_view_column_set_sort_order (self, GtkSortType order))
]

{ #category : #accessing }
GtkTreeViewColumn >> title [

	^ self gtkTreeViewColumnGetTitle
]

{ #category : #accessing }
GtkTreeViewColumn >> title: aString [

	self gtkTreeViewColumnSetTitle: aString
]
